#!/usr/bin/env bash
source /root/devuan.txt
source /root/universal.txt
source /root/source.txt
source /root/userdata.txt
URL="https://raw.githubusercontent.com/pyavitz/scripts/master/"

set -o errexit
set -o pipefail
set -o nounset

echo 'nameserver 8.8.8.8' > /etc/resolv.conf
echo 'nameserver 8.8.4.4' >> /etc/resolv.conf

mount -t proc proc proc/
mount -t sysfs sys sys/

export DEBIAN_FRONTEND="noninteractive"

apt-get update
apt-get install -y apt-utils

### Locales
set_locales

### Timezone
set_timezone

apt upgrade -y
apt dist-upgrade -y
apt install -y openssh-client openssh-server --no-install-recommends
apt install -y ${DEVUAN1} ${DEVUAN2} ${FIRMWARE}
apt -y clean
apt -y autoclean

#### Scripts
cd ~
led_service
mv -f firstboot.sh /usr/local/sbin/firstboot 
chmod +x /usr/local/sbin/*
chown -R root:root /usr/local/sbin/
echo
echo Moving scripts.
sleep 1s
mkdir -p /usr/local/bin
mkdir -p /usr/local/sbin
# Scripts
mv -f run-setup /usr/local/bin/
mv -f sysinfo /usr/local/bin/
mv -f smon /usr/local/bin/
mv -f growpart /usr/bin/
mv -f credentials.sh /usr/local/bin/credentials
wget -cq --show-progress ${URL}swh
mv -f swh /usr/local/bin/
wget -cq --show-progress ${URL}governor
mv -f governor /usr/local/bin/
wget -cq --show-progress ${URL}update-fw
mv -f update-fw /usr/local/bin/
case `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null; echo $?` in
  0)
	wget -cq --show-progress ${URL}write2usb
	mv -f write2usb /usr/local/bin/
	wget -cq --show-progress ${URL}deb-eeprom
	mv -f deb-eeprom /usr/local/bin/
    ;;
esac
if `grep -Fx "userscripts=1" "/root/userdata.txt" >/dev/null;`
	then uscripts_stage2;
fi
initrd_script
# Inits
mv -f firstboot /etc/init.d/
mv -f pwrledoff /etc/init.d/
mv -f actledoff /etc/init.d/
mv -f governor.init /etc/init.d/governor
mv -f bthelper /etc/init.d/
mv -f zramswap /etc/init.d/
mv -f network /etc/init.d/
mv -f credentials /etc/init.d/
# Own
chmod +x /usr/bin/growpart
chown root:root /usr/bin/growpart
chmod +x /usr/local/bin/*
chown -R root:root /usr/local/bin/
echo Done.

#### MOTD
echo
echo Adding motd.
sleep 1s
mkdir -p /etc/update-motd.d
tee /etc/update-motd.d/15-brand <<EOF
#!/bin/bash
echo
toilet -f small --filter metal '${BRAND}'
echo 
EOF
mv -f 20-sysinfo /etc/update-motd.d/20-sysinfo
rm -f /etc/update-motd.d/10-help-text
chmod +x /etc/update-motd.d/*
chown root:root /etc/update-motd.d/15-brand
chown root:root /etc/update-motd.d/20-sysinfo
echo Done.

#### Extra firmware
extra_firmware

####
echo
echo Bluetooth udev rule.
sleep 1s
mkdir -p /lib/udev/rules.d/
mv -f 99-com.rules /lib/udev/rules.d/99-com.rules
echo Done.

### Network Setup
if `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null;`
	then bcm2711_network
fi
if `grep -Fx "bcm2710" "/root/soc.txt" >/dev/null;`
	then bcm2710_network
fi
if `grep -Fx "bcm2708" "/root/soc.txt" >/dev/null;`
	then bcm2708_network
fi

### ZSWAP
echo
echo Adjusting zramswap config.
sleep 1s
zramswap_config
echo Done.

### MOTD instructions
echo
echo Adding motd first boot.
sleep 1s
rm -f /etc/motd
mv -f motd /etc/motd
mv -f new.motd /etc/new.motd
chown root:root /etc/motd
chown root:root /etc/new.motd
echo Done.

###
echo
echo Adding regdb.
sleep 1s
git clone https://kernel.googlesource.com/pub/scm/linux/kernel/git/sforshee/wireless-regdb
echo
echo Moving db files.
sleep 1s
cd wireless-regdb
cp -f regulatory.db /lib/firmware/regulatory.db
cp -f regulatory.db.p7s /lib/firmware/regulatory.db.p7s
cd ~
rm -fdr wireless-regdb
echo Done.

### Adding sys-mods
echo
echo Building raspi-sys-mods package.
sleep 1s
apt update
apt install -y debhelper d-shlibs rfkill dosfstools psmisc
git clone https://github.com/RPi-Distro/raspberrypi-sys-mods.git
mv raspberrypi-sys-mods.patch raspberrypi-sys-mods/
cd raspberrypi-sys-mods
patch -p1 < raspberrypi-sys-mods.patch
rm -f raspberrypi-sys-mods.patch
dpkg-buildpackage -us -uc
cd ~
dpkg -i raspberrypi-sys-mods*.deb
rm -fdR raspberrypi-sys-mods*
echo Removing vscode repo...
if ls /etc/apt/sources.list.d/vscode.list > /dev/null 2>&1
	then rm -f /etc/apt/sources.list.d/vscode.list;
fi
if ls /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null 2>&1
	then rm -f /etc/apt/trusted.gpg.d/microsoft.gpg;
fi
if ls /etc/apt/preferences.d/3rd_parties.pref > /dev/null 2>&1
	then rm -f /etc/apt/preferences.d/3rd_parties.pref;
fi
echo Done.

### Pi Bluetooth
echo
echo Building pi bluetooth package.
sleep 1s
git clone https://github.com/pyavitz/pi-bluetooth.git
cd pi-bluetooth
chmod +x debian/rules
dpkg-buildpackage -us -uc
cd ~
dpkg -i pi-bluetooth_*.deb
rm -fdR pi-bluetooth*
echo Done.

###  Raspi userland
rpi_userland

### Adding eeprom
if `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null;`
	then bcm2711_eeprom
fi

#### Kernel
echo
echo Installing kernel.
apt update
apt upgrade -y
apt -y clean
apt -y autoclean
sleep 1s
cd ~
dpkg -i *.deb
rm -f *.deb
echo Done.
sleep 1s
fetch_version

### Modules
if `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null;`
	then bcm_modules
fi
if `grep -Fx "bcm2710" "/root/soc.txt" >/dev/null;`
	then bcm2710_modules
fi
if `grep -Fx "bcm2708" "/root/soc.txt" >/dev/null;`
	then bcm_modules
fi

### Admin or user
case `grep -Fx "admin=1" "/root/userdata.txt" >/dev/null; echo $?` in
  0)
	admin_config
    ;;
  1)
	user_config
	if `grep -Fx "rootpasswd=1" "/root/userdata.txt" >/dev/null;`
		then root_password;
	fi
    ;;
esac

### Clean misc files
rm -f *.patch
rm -f *led*
rm -f *eeprom*

### RPi Hack
if `grep -Fx "bcm2708" "/root/soc.txt" >/dev/null;`
	then ln -s /lib/ld-linux.so.3 /lib/ld-linux-armhf.so.3
fi

### Vchiq permissions
echo 'SUBSYSTEM=="vchiq",GROUP="video",MODE="0660"' > /etc/udev/rules.d/10-vchiq-permissions.rules
echo 'SUBSYSTEM=="vcio",GROUP="video",MODE="0660"' >> /etc/udev/rules.d/10-vchiq-permissions.rules
echo 'SUBSYSTEM=="vc-mem",GROUP="video",MODE="0660"' >> /etc/udev/rules.d/10-vchiq-permissions.rules

# Load services
echo
echo Adding services.
enable_services > /dev/null 2>&1
echo Done.

###### Finish
echo
echo Moving out of stage2 and creating image.
echo
sleep 2s

umount /proc /sys
