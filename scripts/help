#!/bin/bash

DOWNLOAD="aria2c -c --download-result=hide --console-log-level=error --disable-ipv6=true --summary-interval=0 --show-files=false"
VERSION="5.10.y"
RED="\e[1;31m"
HELP="\e[1;33m"
GRN="\e[1;32m"
PNK="\e[1;35m"
WHT="\e[1;37m"
FIN="\e[0m"
source lib/source
UD=userdata.txt

userdata(){
echo ""
echo "Please create a userdata.txt file"
while [ true ] ; do
read -t 10 -n 1
if [ $? = 0 ] ; then
exit ;
else
echo "run make config"
fi
done
}

if [ -f "$UD" ]; then
    :;
else 
    userdata
fi

validation

os_release(){
if grep -w 'DISTRO_VERSION="buster"' "userdata.txt" > /dev/null 2>&1; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-8/"; else :; fi
if grep -w 'DISTRO_VERSION="beowulf"' "userdata.txt" > /dev/null 2>&1; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-8/"; else :; fi
if grep -w 'DISTRO_VERSION="bullseye"' "userdata.txt" > /dev/null 2>&1; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; else :; fi
if grep -w 'DISTRO_VERSION="chimaera"' "userdata.txt" > /dev/null 2>&1; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; else :; fi
if grep -w 'DISTRO_VERSION="focal"' "userdata.txt" > /dev/null 2>&1; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; else :; fi
if grep -w 'DISTRO_VERSION="hirsute"' "userdata.txt" > /dev/null 2>&1; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; else :; fi
if grep -w 'DISTRO_VERSION="impish"' "userdata.txt" > /dev/null 2>&1; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; else :; fi
if grep -w 'DISTRO_VERSION="testing"' "userdata.txt" > /dev/null 2>&1; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; else :; fi
if grep -w 'DISTRO_VERSION="unstable"' "userdata.txt" > /dev/null 2>&1; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; else :; fi
if grep -w 'DISTRO_VERSION="sid"' "userdata.txt" > /dev/null 2>&1; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; else :; fi
}

echo_bdone(){
echo -e "${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
}

rpi(){
if grep -w "ubuntu=1" "userdata.txt" > /dev/null 2>&1; then echo && echo -e "${WHT}Ubuntu is not supported.${FIN}" && exit 0; fi
os_release
echo
echo -e "${RED}Downloading${FIN} ..."
if [[ `wget -S --spider ${URL}rpi-${VERSION}.tar.xz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then ${DOWNLOAD} ${URL}rpi-${VERSION}.tar.xz && echo_bdone;
	else echo -e "${WHT}Something went wrong? Please report which Distribution and Release you are trying to download.${FIN}" && exit 1;
fi
echo
echo -e "${RED}Extracting archive${FIN} ..."
echo -e -n "${WHT}"
pv rpi-${VERSION}.tar.xz | tar -xJ rpi-${VERSION}
echo -e -n "${FIN}"
rm -f rpi-${VERSION}.tar.xz
if ls output/bcm2708 > /dev/null 2>&1
	then sudo rm -fdr output/bcm2708;
fi
mkdir -p output
mv rpi-${VERSION} output/bcm2708
echo
echo -e "${RED}Results${FIN}:"
ls output/bcm2708/*.deb
echo
}

rpi3(){
os_release
echo
echo -e "${RED}Downloading${FIN} ..."
if [[ `wget -S --spider ${URL}rpi3-${VERSION}.tar.xz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then ${DOWNLOAD} ${URL}rpi3-${VERSION}.tar.xz && echo_bdone;
	else echo -e "${WHT}Something went wrong? Please report which Distribution and Release you are trying to download.${FIN}" && exit 1;
fi
echo
echo -e "${RED}Extracting archive${FIN} ..."
echo -e -n "${WHT}"
pv rpi3-${VERSION}.tar.xz | tar -xJ rpi3-${VERSION}
echo -e -n "${FIN}"
rm -f rpi3-${VERSION}.tar.xz
if ls output/bcm2710 > /dev/null 2>&1
	then sudo rm -fdr output/bcm2710;
fi
mkdir -p output
mv rpi3-${VERSION} output/bcm2710
echo
echo -e "${RED}Results${FIN}:"
ls output/bcm2710/*.deb
echo
}

rpi4(){
os_release
echo
echo -e "${RED}Downloading${FIN} ..."
if [[ `wget -S --spider ${URL}rpi4-${VERSION}.tar.xz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then ${DOWNLOAD} ${URL}rpi4-${VERSION}.tar.xz && echo_bdone;
	else echo -e "${WHT}Something went wrong? Please report which Distribution and Release you are trying to download.${FIN}" && exit 1;
fi
echo
echo -e "${RED}Extracting archive${FIN} ..."
echo -e -n "${WHT}"
pv rpi4-${VERSION}.tar.xz | tar -xJ rpi4-${VERSION}
echo -e -n "${FIN}"
rm -f rpi4-${VERSION}.tar.xz
if ls output/bcm2711 > /dev/null 2>&1
	then sudo rm -fdr output/bcm2711;
fi
mkdir -p output
mv rpi4-${VERSION} output/bcm2711
echo
echo -e "${RED}Results${FIN}:"
ls output/bcm2711/*.deb
echo
}

if [ $# -eq 0 ]
then
        echo -e "\e[0;31mMissing options!${FIN}"
        echo "(run $0 -h for help)"
        echo ""
        exit 0
fi

ECHO="false"

while getopts "1234h" OPTION; do
        case $OPTION in

                1)
                        ECHO="rpi"
                        ;;
                3)
                        ECHO="rpi3"
                        ;;
                4)
                        ECHO="rpi4"
                        ;;
                h)                       
                        echo -e "${RED}Helper, downloads a binary Linux package${FIN}."
                        echo ""
                        echo -e "   make 2708        Raspberry Pi 0/1/W/B/+"
                        echo -e "   make 2710        Raspberry Pi 2/3/A/B/+"
                        echo -e "   make 2711        Raspberry Pi 4B"
                        echo ""
                        exit 0
                        ;;

        esac
done
if [ $ECHO = "rpi" ]
then
        rpi;
fi
if [ $ECHO = "rpi3" ]
then
        rpi3;
fi
if [ $ECHO = "rpi4" ]
then
        rpi4;
fi
