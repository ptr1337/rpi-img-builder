# STAGE 1
stable_sources(){
tee p2/etc/apt/sources.list <<EOF
deb http://deb.debian.org/debian ${DISTRO_VERSION} main contrib non-free
deb http://deb.debian.org/debian ${DISTRO_VERSION}-updates main contrib non-free
deb http://security.debian.org/debian-security ${DISTRO_VERSION}/updates main contrib non-free
deb http://deb.debian.org/debian/ ${DISTRO_VERSION}-backports main contrib non-free
EOF
}

unstable_sources(){
tee p2/etc/apt/sources.list <<EOF
deb http://deb.debian.org/debian ${DISTRO_VERSION} main contrib non-free
EOF
}

distro_release(){
if `grep -Fx 'DISTRO_VERSION="buster"' "userdata.txt" >/dev/null;`
	then stable_sources;
fi
if `grep -Fx 'DISTRO_VERSION="bullseye"' "userdata.txt" >/dev/null;`
	then unstable_sources;
fi
if `grep -Fx 'DISTRO_VERSION="testing"' "userdata.txt" >/dev/null;`
	then unstable_sources;
fi
if `grep -Fx 'DISTRO_VERSION="sid"' "userdata.txt" >/dev/null;`
	then unstable_sources;
fi
if `grep -Fx 'DISTRO_VERSION="unstable"' "userdata.txt" >/dev/null;`
	then unstable_sources;
fi
}

aarch64_extract(){
tar -xf ${DISTRO}-${DISTRO_VERSION}-rootfs-aarch64.tar.xz -C p2/
}

aarch64_rootfs(){
if [ -e ${DISTRO}-${DISTRO_VERSION}-rootfs-aarch64.tar.xz ];
	then echo && echo -n "Extracting rootfs " && aarch64_extract && echo_bdone;
	else echo && echo -e "${YLW}Missing rootfs tarball${FIN}!" && exit;
fi
echo
}

rename_image(){
source kernel.txt
mv -f ${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img ${DEVICE_SOC}-musicbox-${DISTRO_VERSION}-${INSTALLED_KERNEL}-${FSTYPE}-${IMAGE_DATE}.img
}

compress_image(){
source kernel.txt
mv -f ${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img ${DEVICE_SOC}-musicbox-${DISTRO_VERSION}-${INSTALLED_KERNEL}-${FSTYPE}-${IMAGE_DATE}.img
xz -zev --threads=${CORES} ${DEVICE_SOC}-musicbox-${DISTRO_VERSION}-${INSTALLED_KERNEL}-${FSTYPE}-${IMAGE_DATE}.img
}

# STAGE 2
# ADMIN CONFIG
bcm2710_admin(){
echo -n 'bcm2710' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2710' /etc/hosts
}

bcm2711_admin(){
echo -n 'bcm2711' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2711' /etc/hosts
}

admin_config(){
if `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null;`
	then bcm2711_admin
fi
if `grep -Fx "bcm2710" "/root/soc.txt" >/dev/null;`
	then bcm2710_admin
fi

groupadd spi
groupadd i2c
groupadd gpio

echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc.
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mv -f user-ini /etc/opt/user-ini
mv -f nanorc-user /etc/opt/nanorc-user
chown -R root:root /root
echo Done.

mv -f user-bin.zip /etc/opt/
mv -f username.txt /boot/
mv -f whogoesthere /usr/local/bin/
chmod +x /usr/local/bin/whogoesthere
chown -R root:root /usr/local/bin/whogoesthere
}

led_service(){
echo
echo Creating actled switch.
tee /usr/local/sbin/actled <<EOF
#!/bin/bash
# activity led switch
rpi_switch(){
sh -c 'echo 0 > /sys/devices/platform/leds/leds/led0/brightness'
}

if [ -e /sys/devices/platform/leds/leds/led0/brightness ];
	then rpi_switch;
fi

EOF

echo
echo Creating pwrled switch.
tee /usr/local/sbin/pwrled <<EOF
#!/bin/bash
# power led switch
rpi_switch(){
sh -c 'echo 0 > /sys/devices/platform/leds/leds/led1/brightness'
}

if [ -e /sys/devices/platform/leds/leds/led1/brightness ];
	then rpi_switch;
fi

EOF
}

network_setup(){
rm -f /etc/network/interfaces
mv -f credentials.txt /boot/rename_to_credentials.txt
cp -f soc.txt /etc/opt/
chown root:root /etc/opt/soc.txt

tee /etc/opt/interfaces.manual <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/interfaces <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	wlan_address 10.0.0.10
	wlan_netmask 255.255.255.0
	wlan_gateway 10.0.0.1
	wlan_dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/wpa_supplicant.manual <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=US

network={
	ssid="mywifissid"
	scan_ssid=1
	key_mgmt=WPA-PSK
	psk="wifipasskey"
}
EOF

tee /etc/opt/wpa_supplicant.conf <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=

network={
	name=
	scan_ssid=1
	key_mgmt=WPA-PSK
	password=
}
EOF

}

led_switches(){
echo
echo Creating power led switch.
sleep 1s
tee /etc/systemd/system/pwrledoff.service <<EOF
[Unit]
Description=Turn off power led
ConditionPathExists=/usr/local/sbin/pwrled
[Service]
Type=forking
ExecStart=/usr/local/sbin/pwrled &>/dev/null
[Install]
WantedBy=multi-user.target
EOF

echo
echo Creating activity led switch. 
sleep 1s
tee /etc/systemd/system/actledoff.service <<EOF
[Unit]
Description=Turn off activity led
ConditionPathExists=/usr/local/sbin/actled
[Service]
Type=forking
ExecStart=/usr/local/sbin/actled &>/dev/null
[Install]
WantedBy=multi-user.target
EOF
}

enable_services(){
systemctl enable rc-local
systemctl enable ifplugd
systemctl enable resolvconf
systemctl enable haveged
systemctl enable zramswap
systemctl enable bluetooth
update-rc.d firstboot defaults 2
systemctl enable firstboot
systemctl enable credentials
systemctl enable governor
#systemctl enable serial-getty@ttyUSB0.service
}
